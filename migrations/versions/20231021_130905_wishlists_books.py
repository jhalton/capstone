"""Wishlists books

Revision ID: 10841f78beee
Revises: b25290252b25
Create Date: 2023-10-21 13:09:05.918180

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")
# revision identifiers, used by Alembic.
revision = '10841f78beee'
down_revision = 'b25290252b25'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('wishlist_books',
    sa.Column('wishlist_id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.ForeignKeyConstraint(['wishlist_id'], ['wishlists.id'], ),
    sa.PrimaryKeyConstraint('wishlist_id', 'book_id')
    )
    with op.batch_alter_table('wishlists', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.String(), nullable=False, server_default=''))

    if environment == "production":
        op.execute(f"ALTER TABLE wishlists SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE wishlist_books SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('wishlists', schema=None) as batch_op:
        batch_op.drop_column('name')

    op.drop_table('wishlist_books')
    # ### end Alembic commands ###
